---
- name: calculate kubeadm CA cert hash
  shell: |
    set -o pipefail
    openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
  register: kubeadm_ca_hash
  delegate_to: "{{ groups['k8s-master'][0] }}"
  args:
    executable: /bin/bash
  when:
    - kubeadm_ca_hash is not defined
    - kubeadm_already_run is not defined or not kubeadm_already_run.stat.exists

- name: create kubeadm token for joining nodes with 1h expiration
  command: kubeadm token create --ttl 1h
  register: temp_token
  delegate_to: "{{ groups['k8s-master'][0] }}"
  when:
    - kubeadm_token is not defined
    - kubeadm_already_run is not defined or not kubeadm_already_run.stat.exists

- name: set kubeadm_token to generated token
  set_fact:
    kubeadm_token: "{{ temp_token.stdout }}"
  when:
    - kubeadm_token is not defined
    - kubeadm_already_run is not defined or not kubeadm_already_run.stat.exists

- name: create kubeadm client config
  template:
    src: "kubeadm-client.yml.j2"
    dest: "/etc/kubernetes/kubeadm-client.yml"
    backup: yes
  when: kubeadm_already_run is not defined or not kubeadm_already_run.stat.exists

- name: join to cluster if needed
  command: >-
    timeout -k 120s 120s kubeadm join
      --config /etc/kubernetes/kubeadm-client.yml
  register: kubeadm_join
  when: kubeadm_already_run is not defined or not kubeadm_already_run.stat.exists
